pub type Clock = (u16, u16);

pub enum Opcode {
    Adc(CpuRegister, Clock),
    AdcD8(Clock),
    AdcHl(Clock),
    Add(CpuRegister, Clock),
    AddD8(Clock),
    AddHl(Clock),
    And(CpuRegister, Clock),
    AndD8(Clock),
    AndHl(Clock),
    Ccf(Clock),
    Cp(CpuRegister, Clock),
    CpD8(Clock),
    CpHl(Clock),
    Cpl(Clock),
    DecHl(Clock),
    DecR(CpuRegister, Clock),
    DecSp(Clock),
    Dec16(CpuRegister16, Clock),
    IncHl(Clock),
    IncR(CpuRegister, Clock),
    IncSp(Clock),
    Inc16(CpuRegister16, Clock),
    Ld(CpuRegister, CpuRegister, Clock),
    LdD8(CpuRegister, Clock),
    LdHlD8(Clock),
    LdHlA(bool, Clock),
    LdAHl(bool, Clock),
    LdA16Sp(Clock),
    Ld16R(CpuRegister16, CpuRegister, Clock),
    LdR16(CpuRegister, CpuRegister16, Clock),
    LdR16D16(CpuRegister16, Clock),
    LdSpD16(Clock),
    LdSpE8(Clock),
    LdSpHl(Clock),
    Or(CpuRegister, Clock),
    OrD8(Clock),
    OrHl(Clock),
    Pop(CpuRegister16, Clock),
    Push(CpuRegister16, Clock),
    Sbc(CpuRegister, Clock),
    SbcD8(Clock),
    SbcHl(Clock),
    Scf(Clock),
    Sub(CpuRegister, Clock),
    SubD8(Clock),
    SubHl(Clock),
    XOr(CpuRegister, Clock),
    XOrD8(Clock),
    XOrHl(Clock)
}

pub enum CpuRegister {
    A,
    B,
    C,
    D,
    E,
    H,
    L
}

pub enum CpuRegister16 {
    AF,
    BC,
    DE,
    HL
}