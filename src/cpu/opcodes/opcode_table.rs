use super::super::Cpu;
use super::opcode::{ArithmeticRegister, Opcode};

pub const OPCODE_TABLE: [Option<Opcode>; 256] = [
  /* 0 */  None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
  /* 1 */  None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
  /* 2 */  None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
  /* 3 */  None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
  /* 4 */  None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
  /* 5 */  None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
  /* 6 */  None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
  /* 7 */  None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None,
  /* 8 */  Some(Opcode::Add(Cpu::add_a, ArithmeticRegister::B, (1, 4))), Some(Opcode::Add(Cpu::add_a, ArithmeticRegister::C, (1, 4))), Some(Opcode::Add(Cpu::add_a, ArithmeticRegister::D, (1, 4))), Some(Opcode::Add(Cpu::add_a, ArithmeticRegister::E, (1, 4))), Some(Opcode::Add(Cpu::add_a, ArithmeticRegister::H, (1, 4))), Some(Opcode::Add(Cpu::add_a, ArithmeticRegister::L, (1, 4))), Some(Opcode::AddHL((1, 8))), Some(Opcode::Add(Cpu::add_a, ArithmeticRegister::A, (1, 4))), Some(Opcode::Adc(Cpu::adc_a, ArithmeticRegister::B, (1, 4))), Some(Opcode::Adc(Cpu::adc_a, ArithmeticRegister::C, (1, 4))), Some(Opcode::Adc(Cpu::adc_a, ArithmeticRegister::D, (1, 4))), Some(Opcode::Adc(Cpu::adc_a, ArithmeticRegister::E, (1, 4))), Some(Opcode::Adc(Cpu::adc_a, ArithmeticRegister::H, (1, 4))), Some(Opcode::Adc(Cpu::adc_a, ArithmeticRegister::L, (1, 4))), Some(Opcode::AdcHL((1, 8))), Some(Opcode::Adc(Cpu::adc_a, ArithmeticRegister::A, (1, 4))),
  /* 9 */  Some(Opcode::Sub(Cpu::sub_a, ArithmeticRegister::B, (1, 4))), Some(Opcode::Sub(Cpu::sub_a, ArithmeticRegister::C, (1, 4))), Some(Opcode::Sub(Cpu::sub_a, ArithmeticRegister::D, (1, 4))), Some(Opcode::Sub(Cpu::sub_a, ArithmeticRegister::E, (1, 4))), Some(Opcode::Sub(Cpu::sub_a, ArithmeticRegister::H, (1, 4))), Some(Opcode::Sub(Cpu::sub_a, ArithmeticRegister::L, (1, 4))), Some(Opcode::SubHL((1, 8))), Some(Opcode::Sub(Cpu::sub_a, ArithmeticRegister::A, (1, 4))), Some(Opcode::Sbc(Cpu::sbc_a, ArithmeticRegister::B, (1, 4))), Some(Opcode::Sbc(Cpu::sbc_a, ArithmeticRegister::C, (1, 4))), Some(Opcode::Sbc(Cpu::sbc_a, ArithmeticRegister::D, (1, 4))), Some(Opcode::Sbc(Cpu::sbc_a, ArithmeticRegister::E, (1, 4))), Some(Opcode::Sbc(Cpu::sbc_a, ArithmeticRegister::H, (1, 4))), Some(Opcode::Sbc(Cpu::sbc_a, ArithmeticRegister::L, (1, 4))), Some(Opcode::SbcHL((1, 8))), Some(Opcode::Sbc(Cpu::sbc_a, ArithmeticRegister::A, (1, 4))),
  /* A */  Some(Opcode::And(Cpu::and_a, ArithmeticRegister::B, (1, 4))), Some(Opcode::And(Cpu::and_a, ArithmeticRegister::C, (1, 4))), Some(Opcode::And(Cpu::and_a, ArithmeticRegister::D, (1, 4))), Some(Opcode::And(Cpu::and_a, ArithmeticRegister::E, (1, 4))), Some(Opcode::And(Cpu::and_a, ArithmeticRegister::H, (1, 4))), Some(Opcode::And(Cpu::and_a, ArithmeticRegister::L, (1, 4))), Some(Opcode::AndHL((1, 8))), Some(Opcode::And(Cpu::and_a, ArithmeticRegister::A, (1, 4))), Some(Opcode::XOr(Cpu::xor_a, ArithmeticRegister::B, (1, 4))), Some(Opcode::XOr(Cpu::xor_a, ArithmeticRegister::C, (1, 4))), Some(Opcode::XOr(Cpu::xor_a, ArithmeticRegister::D, (1, 4))), Some(Opcode::XOr(Cpu::xor_a, ArithmeticRegister::E, (1, 4))), Some(Opcode::XOr(Cpu::xor_a, ArithmeticRegister::H, (1, 4))), Some(Opcode::XOr(Cpu::xor_a, ArithmeticRegister::L, (1, 4))), Some(Opcode::XOrHL((1, 8))), Some(Opcode::XOr(Cpu::xor_a, ArithmeticRegister::A, (1, 4))),
  /* B */  Some(Opcode::Or(Cpu::or_a, ArithmeticRegister::B, (1, 4))), Some(Opcode::Or(Cpu::or_a, ArithmeticRegister::C, (1, 4))), Some(Opcode::Or(Cpu::or_a, ArithmeticRegister::D, (1, 4))), Some(Opcode::Or(Cpu::or_a, ArithmeticRegister::E, (1, 4))), Some(Opcode::Or(Cpu::or_a, ArithmeticRegister::H, (1, 4))), Some(Opcode::Or(Cpu::or_a, ArithmeticRegister::L, (1, 4))), Some(Opcode::OrHL((1, 8))), Some(Opcode::Or(Cpu::or_a, ArithmeticRegister::A, (1, 4))), Some(Opcode::Cp(Cpu::cp_a, ArithmeticRegister::B, (1, 4))), Some(Opcode::Cp(Cpu::cp_a, ArithmeticRegister::C, (1, 4))), Some(Opcode::Cp(Cpu::cp_a, ArithmeticRegister::D, (1, 4))), Some(Opcode::Cp(Cpu::cp_a, ArithmeticRegister::E, (1, 4))), Some(Opcode::Cp(Cpu::cp_a, ArithmeticRegister::H, (1, 4))), Some(Opcode::Cp(Cpu::cp_a, ArithmeticRegister::L, (1, 4))), Some(Opcode::CpHL((1, 8))), Some(Opcode::Cp(Cpu::cp_a, ArithmeticRegister::A, (1, 4))),
  /* C */  None, None, None, None, None, None, Some(Opcode::AddD8((2, 8))), None, None, None, None, None, None, None, Some(Opcode::AdcD8((2, 8))), None,
  /* D */  None, None, None, None, None, None, Some(Opcode::SubD8((2, 8))), None, None, None, None, None, None, None, Some(Opcode::SbcD8((2, 8))), None,
  /* E */  None, None, None, None, None, None, Some(Opcode::AndD8((2, 8))), None, None, None, None, None, None, None, Some(Opcode::XOrD8((2, 8))), None,
  /* F */  None, None, None, None, None, None, Some(Opcode::OrD8((2, 8))), None, None, None, None, None, None, None, Some(Opcode::CpD8((2, 8))), None
];